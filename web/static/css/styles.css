:root {
    --light-mode-foreground             : #dddddd;
    --light-mode-background             : 238, 238, 238;
    --light-mode-text                   : 0, 0, 0;
    --dark-mode-foreground              : #232323;
    --dark-mode-background              : 19, 19, 19;
    --dark-mode-text                    : var(--light-mode-background);
    --global-border-color               : #aaaaaa;
    --accent-color                      : #2f9df7;
    --red-text                          : #ff3535;
}

html {
    width: 100%;
}

body {
    font-family: system-ui, Arial, sans-serif;
}

body * {
    box-sizing: border-box;
    /* outline: 1px solid red !important; */
}

body,
dialog,
.logTextArea {
    background-color: rgb(var(--light-mode-background));
    color: rgb(var(--light-mode-text));
}

/* Specficially for /import/ index.html */

.container {
    padding: 20px;
    width: 50%;
    text-align: center;
}

.drop-area {
    border: 2px dashed var(--global-border-color);
    border-radius: 1%;
    padding: 20px;
}

.logTextArea {
    width: 100%;
    height: 200px;
    resize: none;
    border: 1px solid var(--global-border-color);
    border-radius: 1%;
    padding: 10px;
    outline: none;
}

/* End: Specficially for /import/ index.html */

textarea {
    resize: vertical;
    font-family: inherit;
    /* Not available everywhere yet. */
    /* But, accomplishes how this element should behave. */
    /* https://developer.mozilla.org/docs/Web/CSS/field-sizing */
    /* field-sizing: content; */
}

.label-input {
    display: grid;
    position: relative;
    width: 100%;
    border-radius: 1%;
    overflow: hidden;
}

.label-input .input-placeholder {
    position: absolute;
    top: 20px;
    left: 12px;
    font-size: 1em;
    color: rgba(var(--light-mode-text), 0.5);
    transform-origin: 0 0;
    transform: translate3d(0, 0, 0);
    transition: all 0.2s ease;
    pointer-events: none;
}

.label-input .focus-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(var(--light-mode-text), 0.05);
    z-index: -1;
    transform: scaleX(0);
    transform-origin: left;
}

.label-input input,
.label-input textarea {
    appearance: none;
    width: 100%;
    border: 0;
    padding: 16px 12px 0 12px;
    height: 56px;
    font-size: 1em;
    background: rgba(var(--light-mode-text), 0.02);
    box-shadow: inset 0 -1px 0 rgba(var(--light-mode-text), 0.3);
    color: rgb(var(--light-mode-text));
    transition: all 0.15s ease;
}

.label-input textarea {
    padding: 24px 12px 0px 12px;
}

.label-input input:hover,
.label-input textarea:hover {
    background: rgba(var(--light-mode-text), 0.04);
    box-shadow: inset 0 -1px 0 rgba(var(--light-mode-text), 0.5);
}

.label-input input:not(:placeholder-shown) + .input-placeholder,
.label-input textarea:not(:placeholder-shown) + .input-placeholder {
    color: rgba(var(--light-mode-text), 0.5);
    transform: translate3d(0, -12px, 0) scale(0.75);
}

.label-input input:focus,
.label-input textarea:focus {
    background: rgba(var(--light-mode-text), 0.05);
    outline: none;
    box-shadow: inset 0 -2px 0 var(--accent-color);
}

.label-input input:focus + .input-placeholder,
.label-input textarea:focus + .input-placeholder {
    color: var(--accent-color);
    transform: translate3d(0, -12px, 0) scale(0.75);
}

.label-input input:focus + .input-placeholder + .focus-bg,
.label-input textarea:focus + .input-placeholder + .focus-bg {
    transform: scaleX(1);
    transition: all 0.1s ease;
}

.red-text {
    color: var(--red-text);
    text-align: right;
}

.button-svg {
    border: none;
    background-color: transparent;
    cursor: pointer;
}

.button-text {
    border-radius: 1%;
    cursor: pointer;
    color: rgb(var(--light-mode-text));
}

.button-hostname {
    background: none;
    border: none;
    cursor: pointer;
    color: inherit;
    outline: none;
}

button:disabled {
    background-color: grey;
    border-color: grey;
    cursor: not-allowed;
}

@keyframes pop {
    0% { opacity: 0; }
    75% { opacity: 1; }
    100% { transform: scale(1.2); }
}

input[type="checkbox"]:checked,
button:active {
    animation: pop 0.3s ease;
}

nav {
    width: 100%;
    padding: 10px;
    background-color: var(--light-mode-foreground);
    border-radius: 1%;
    display: flex;
    align-items: center;
}

.nav-left {
    margin-right: auto;
}

main {
    margin-top: 10px;
}

.grid-view-list {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-gap: 10px;
}

.grid-child,
.dialog-inputs {
    background-color: var(--light-mode-foreground);
}

.grid-child {
    display: flex;
    flex-direction: column;
    padding: 10px;
    border-radius: 1%;
}

.grid-child .bkm-info {
    flex: 1;
}

.grid-child a {
    text-decoration: none;
    color: black;
}

.grid-child a:hover {
    text-decoration: underline;
    color: var(--accent-color);
}

.thumbnail-image {
    display: grid;
}

.thumbnail-image img,
.thumbnail-image a {
    grid-row: 1;
    grid-column: 1;
}

.thumbnail-image img {
    width: 100%;
    height: 150px;
    overflow: hidden;
}

.grid-child .default-thumburl {
    display: block;
    margin: auto;
    width: 75px;
}

.grid-child .default-thumburl-bg,
.grid-child .thumburl-bg {
    object-fit: cover;
    filter: blur(15px);
    opacity: 0.05;
}

.grid-child .default-thumburl,
.grid-child .thumburl {
    object-fit: contain;
    position: relative;
}

.grid-child .bkm-note {
    white-space: preserve;
    padding: 0.5em;
    /* box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 12px; */
    background-color: rgba(var(--light-mode-background), 0.3);
}

.grid-child .category {
    border: 1px solid var(--global-border-color);
    border-radius: 5%;
    padding: 3px;
}

.bkm-hostname,
.id-modified {
    font-family: monospace;
    opacity: 0.5;
    font-weight: bold;
    font-size: 0.83em;
}

.pad-like-p {
    padding: 0.5em 0px;
}

.bkm-keywords {
    display: inline-block;
}

.keywords {
    border-bottom: 1px solid var(--global-border-color);
}

.footer-grid-child {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding-top: 0.5em;
}

.footer-grid-child .footer-buttons {
    display: flex;
}

.special-bookmarks {
    display: flex;
    align-items: center;
}

.svg-img {
    width: 1.5em;
    height: 1.5em;
    filter: invert(8%) sepia(19%) saturate(21%) hue-rotate(320deg) brightness(104%) contrast(89%);
}

.button-svg:hover {
    opacity: 0.5;
    transition: all ease 0.3s;
    cursor: pointer;
}

.dialog-inputs {
    padding: 10px;
}

dialog {
    border: 1px solid var(--accent-color);
    padding: 20px;
    min-width: 50%;
}

dialog:open {
    animation: fade-in 0.5s ease-out;
}

dialog::backdrop {
    transition: all 0.5s allow-discrete;
}

dialog:open::backdrop {
  background-color: rgba(0, 0, 0, 50%);
}

body:has(dialog[open]) {
    overflow: hidden;
}

.dialog-top {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 5px;
}

.dialog-type,
.input-search {
    flex: 1;
}

.input-search {
    font-size: 1em;
}

.center-text {
    text-align: center;
}

.pagination {
    margin: 15px;
}

.pagination a {
    color: black;
    padding: 8px 16px;
    text-decoration: none;
    transition: background-color 0.3s;
    border-radius: 10%;
}

.pagination a.active {
    background-color: var(--accent-color);
    color: black;
}

.pagination a:hover:not(.active) {
    background-color: var(--light-mode-foreground);
}

@keyframes fade-in {
    0% {
        opacity: 0;
        transform: scaleY(0);
        display: none;
    }
    100% {
        opacity: 1;
        transform: scaleY(1);
        display: block;
    }
}

@media (prefers-color-scheme: dark) {
    body,
    dialog,
    .logTextArea {
        background-color: rgb(var(--dark-mode-background));
        color: rgb(var(--dark-mode-text));
    }

    input,
    textarea,
    .grid-child .category,
    .grid-child .keywords,
    .grid-child a,
    .pagination a {
        color: rgb(var(--dark-mode-text));
    }

    .label-input .input-placeholder {
        color: rgba(var(--dark-mode-text), 0.5);
    }

    .label-input .focus-bg {
        background: rgba(var(--dark-mode-text), 0.05);
    }

    .label-input input,
    .label-input textarea {
        background: rgba(var(--dark-mode-text), 0.02);
        box-shadow: inset 0 -1px 0 rgba(var(--dark-mode-text), 0.3);
        color: rgb(var(--dark-mode-text));
    }

    .label-input input:hover,
    .label-input textarea:hover {
        background: rgba(var(--dark-mode-text), 0.04);
        box-shadow: inset 0 -1px 0 rgba(var(--dark-mode-text), 0.5);
    }

    .label-input input:not(:placeholder-shown) + .input-placeholder,
    .label-input textarea:not(:placeholder-shown) + .input-placeholder {
        color: rgba(var(--dark-mode-text), 0.5);
    }

    .label-input input:focus,
    .label-input textarea:focus {
        background: rgba(var(--dark-mode-text), 0.05);
    }

    .pagination a:hover:not(.active) {
        background-color: var(--dark-mode-foreground);
    }

    .button-text {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
    }

    nav {
        background-color: var(--dark-mode-foreground);
    }

    .grid-child,
    .dialog-inputs,
    .update-main div {
        background-color: var(--dark-mode-foreground);
    }

    .grid-child .bkm-note {
        background-color: rgba(var(--dark-mode-background), 0.3);
    }

    .svg-img {
        filter: invert(100%) sepia(46%) saturate(149%) hue-rotate(217deg) brightness(112%) contrast(84%);
    }
}

@media only screen and (max-width: 1920px) {
    .grid-view-list {
        grid-template-columns: repeat(5, 1fr);
    }
}
